port = 9989

server_dir = '/Users/yusuf/tmp/synctest/server'
client_dir = '/Users/yusuf/tmp/synctest/client'

#######

Sync = [

    'init' : function(self, watched)

        self = ['watched':watched] + self
        self.files = self.local_snapshot()
        return self

    end,

    'local_snapshot' : function(self)

        list = sys.file_list(self.watched) - self.watched
        normalized = [(f-self.watched):list[f] for f in list.keys where not self.ignore(f)]
        return normalized

    end,

    'ignore' : function(self, path)

        i = path.length - 1
        while ((path[i] != '/') and (i >= 0))
            i = i - 1
        end

        return (i >= 0) and (path[i+1] == '.') # ignore .*

    end,

    'connected' : function(self, id)

        self.peer = id
        connectionn = self.peer

        msg1 = ['event' : 'login', 'files' : self.files]
        sys.send(self.peer, msg1)

    end,

    'messaged' : function(self, id, msg4)

        sys.print('message from ' + id + ': ' + msg4)
        if msg4.event == 'content-request' then
            self.handle_content_request(id, msg4)
        else if msg4.event == 'login' then
            self.snapshot = msg4.files
        else if msg4.event == 'change' then
            self.handle_change(msg4.changes)
        else if msg4.event == 'content' then
            sys.write(self.watched + msg4.path, msg4.content)
        end

    end,

    'handle_content_request' : function(self, id, msg5)

        for path in msg5.paths.keys

            fullpath = self.watched + path
            content = sys.read(fullpath)
            response = ['event' : 'content', 'path' : path, 'content' : content]
            sys.send(id, response)

        end

    end,

    'filed' : function(self, path)

        latest = self.local_snapshot()
        added = latest - self.files
        deleted = self.files - latest
        changes = ['added' : added, 'deleted' : deleted]
        msg2 = ['event' : 'change', 'changes' : changes]
        filedd = self.peer
        sys.send(self.peer, msg2)
        self.files = latest

    end,

    'handle_change' : function(self, changez)

        self.snapshot = self.snapshot + changez.added - changez.deleted
        if changez.added.keys.length then
            msg3 = ['event' : 'content-request', 'paths' : changez.added]
            sys.send(self.peer, msg3)
        end

        for f in changez.deleted.keys
            sys.remove(self.watched + f)
        end

    end    
]

####### main

server = Sync.init(server_dir)
client = Sync.init(client_dir)

sys.listen(port, server)                #server listens for incoming socket connections
sys.connect('127.0.0.1', port, client)  #client connects to server
sys.file_listen(server_dir, server)     # server listens for file changes
