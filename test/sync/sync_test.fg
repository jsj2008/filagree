####### test_sync.fg

# to run, launch    server and two clients, 'A' and 'B'


import 'sync' # for host and port
import '../test_director'


director = [

    'run_tests' : function(self)

        self.crud()

    end,


    'sync_direct' : function(self, whom, action, path, content)

        self.direct(whom, action, 'path':path, 'content':content)

    end,


    #
    # test to create, rename, update, delete
    #

    'crud' : function(self)

        # create
        self.sync_direct('A',      'update', 'a.txt', '123')
/*
        self.sync_direct('A',      'verify', 'a.txt', '123')
        self.sync_direct('server', 'verify', 'a.txt', '123')
        self.sync_direct('B',      'verify', 'a.txt', '123')

        # rename
        self.sync_direct('A',      'rename', 'a.txt', 'b.txt')
        self.sync_direct('A',      'verify', 'b.txt', '123')
        self.sync_direct('server', 'verify', 'b.txt', '123')
        self.sync_direct('B',      'verify', 'b.txt', '123')

        # update
        self.sync_direct('B',      'update', 'a.txt', '456')
        self.sync_direct('B',      'verify', 'a.txt', '456')
        self.sync_direct('server', 'verify', 'a.txt', '456')
        self.sync_direct('A',      'verify', 'a.txt', '456')

        #delete
        self.sync_direct('A',      'delete', 'a.txt')
        self.sync_direct('A',      'verify', 'a.txt')
        self.sync_direct('server', 'verify', 'a.txt')
        self.sync_direct('B',      'verify', 'a.txt')
*/
    end,


] + test_director


director.mesh = Mesh.init(director.id, host, port, [director])
director.mesh.connect()
