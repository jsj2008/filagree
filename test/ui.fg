# ui.fg ###################################################################


sys.form_saver = function(self, key)
    f = function()(key)
        sys.save_form(key)
    end
    return f
end


sys.form_get = function(self, form)

    result = []

    for key in form
        result = result + (key : sys.ui_get(form[key]))
    end

    return result

end


sys.form_set = function(self, form, values)

    for item in form
        sys.set_value(item, form[item.name], values[item.name])
    end

end


sys.set_size = function(self, item, w, h)

    type = item[0]
    kids = item.part(1)

    if item.align == 'right' then
        item.dx = w - item.w
    end
    item.w = w

    if (type == 'horizontal') then

        sys.print('horiz w = ' + w)

        if not kids.length then return end

        for k in kids where (k.width < 1)
            sys.print('k.width='+k.width +' * '+ w +' = ' + (w * k.width))
            k.width = w * k.width
        end
        int widthed = 0
        sys.print('kids='+kids)
        for k in kids where k.width
            sys.print('kw = ' + k.width)
            widthed = widthed + 1
            w = w - k.width
        end

        f = w / (kids.length - widthed)
        sys.print('f='+w+'/'+kids.length+'-'+widthed+' = '+f)
        for k in kids
            self.set_size(k, k.width or f, h)
        end

        item.h = h

    else if (type == 'vertical')

        if not kids.length then return end

        filler = used = 0
        for k in kids
            if k.hfill then
                filler = filler + 1
            else
                used = used + k.h
            end
        end

        if filler then
            fh = (h - used) / filler
            item.hfill = true
        end

        for k in kids
            if k.hfill then
                self.set_size(k, w, fh)
            else if k[0] == 'table' then
                k.w, k.h = w, h - used
            else
                self.set_size(k, w, k.h)
            end
        end

        if item.hfill then
            item.h = h
        else
            item.h = used
        end

    else if item.hfill
        item.h = h
    end

end


sys.ui = function(self, uictx, item, parent, x, y)

    ui,w,h = sys.ui_create(uictx, item, parent)
    sys.set_size(item, w, h)
    sys.ui_place(item)

    return ui

end


sys.ui_place = function(self, item, x, y)

    type = item[0]
    children = item.part(1)

    if (type == 'vertical') then
        w = h = 0
        for i in children
            a,b = sys.ui_place(i, x, y+h)
            if a > w then w = a end
            h = h + b
        end
    else if (type == 'horizontal') then
        w = h = 0
        for i in children
            a,b = sys.ui_place(i, x+w, y)
            w = w + a
            if b > h then h = b end
        end
    else
        sys.print('ui_put ' + type +' '+ x+item.dx +', '+ y)
        sys.ui_put(item.widget, x + item.dx, y, item.w - item.dx, item.h)
        return item.w, item.h
    end

    return w,h

end

sys.ui_resized = function(uictx)
    sys.print('resized ' + uictx)
end

sys.ui_create = function(self, uictx, item, parent)

    if not parent then
    
        resizer = function(uictx, w, h)(uictx, item)
            sys.print('resizer ' + item)
            sys.ui(uictx, item)
        end

        w,h = sys.window(item, resizer)
        parent = ['w':w, 'h':h]
        return sys.ui_create(uictx, item, parent, 0, 0), w,h
    end

    names = w = h = nil
    o = item.widget
    type = item[0]
    kids = item.part(1)

    if (type == 'vertical') or (type == 'horizontal') then
        for i in kids
            names = sys.ui_create(uictx, i, parent) + names
        end

    else if type == 'form' then # replace with individual fields
        item.remove(0,item.length)
        item.insert('vertical')
        for name in kids
            field = ['input', 'hint':name, 'name':name]
            item.insert(field)
        end
        names = sys.ui_create(uictx, item, parent)

    else if type == 'input' then
        o,w,h = sys.input(uictx, item.hint, item.multiline, item.readonly, o)

    else if type == 'label' then
        o,w,h = sys.label(uictx, item.text, o)

    else if type == 'button' then
        o,w,h = sys.button(uictx, item.logic, item.text, item.image, o)

    else if type == 'table' then
        o,w,h = sys.table(uictx, item.list, item.logic, o)
    end

    item.widget = o
    item.w = item.width or w
    item.h = item.height or h
    #sys.print('ui_create ' + item[0] +' '+item.w)

    if not names then
        names = []
    end
    if item.name then
        names[item.name] = o
    end
    return names

end

/*

testui = function()

    tester = [ 'select' : function(ctx)
                                sys.print('select ' + sys.args()[1])
                                sys.update(ctx.ui.testable, [3,1,4,1,5])
                            end ]

    tester.ui = sys.ui( tester,

                        ['vertical',

                            ['form', 'username', 'password'],

                            ['horizontal',
                                ['button', 'text':'submit'],
                                ['button', 'text':'cancel']
                            ],

                            ['table', 'name':'testable', 'list':[7,8,9], 'hfill':true, 'logic':tester.select],

                            'w':240, 'h':320
                        ] )

    sys.print(tester.ui) # all the named ui items

    sys.loop()

end

testui()

*/
