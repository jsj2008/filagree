# ui.fg ###################################################################

sys.form_saver = function(self, key)
    f = function()(key)
        sys.save_form(key)
    end
    return f
end

sys.form_get = function(self, form)

    result = []

    for key in form.keys
        result = result + (key : sys.ui_get(form[key]))
    end

    return result

end

sys.form_set = function(self, form, values)

    for item in form
        sys.set_value(item, form[item.name], values[item.name])
    end

end

sys.set_heights = function(self, item, available)

    kids = item.part(1)
    filler = 0
    for k in kids
        if k.fill then
            filler = filler + 1
        else
            available = available - k.h
        end
    end

    if filler then
        fh = available / filler
        item.fill = true
        for k in kids where k.fill
            self.set_heights(k, fh)
        end
    end

    if item.fill then
        item.h = available
    end

end

sys.ui = function(self, uictx, item, parent, x, y)

    uictx.ui,w,h = sys.ui_create(uictx, item, parent)
    sys.print('availh=' + h)
    sys.set_heights(item, h)
    sys.ui_place(item)

end

sys.ui_place = function(self, item, x, y)

    type = item[0]
    details = item.part(1)

    if (type == 'vertical') then
        w = h = 0
        for i in details
            a,b = sys.ui_place(i, x, y+h)
            if a > w then w = a end
            h = h + b
        end
    else if (type == 'horizontal') then
        w = h = 0
        for i in details
            a,b = sys.ui_place(i, x+w, y)
            w = w + a
            if b > h then h = b end
        end
    else
        sys.ui_put(item.widget, x, y, item.w, item.h)
        return item.w, item.h
    end

    return w,h

end

sys.ui_create = function(self, uictx, item, parent)

    if not parent then
        w,h = sys.window(item.w, item.h)
        parent = ['w':w, 'h':h]
        sys.print('parh=' + h)
        return sys.ui_create(uictx, item, parent, 0, 0), w,h
    end

    names = o = w = h = nil
    type = item[0]
    details = item.part(1)

    if (type == 'vertical') or (type == 'horizontal') then
        for i in details
            names = sys.ui_create(uictx, i, parent)
        end

    else if type == 'form' then
        for k in item.keys
            item[k] = nil
        end
        item.type = 'vertical'
        for name in details
            field = ['horizontal',
                ['label', 'text' : name],
                ['input', name, 'name':name],
            ]
            item.insert(field)
        end
        names = sys.ui_create(uictx, item, parent)

    else if type == 'input' then
        o,w,h = sys.input(uictx, item.hint, item.multiline, item.readonly)

    else if type == 'label' then
        o,w,h = sys.label(uictx, item.text)

    else if type == 'button' then
        o,w,h = sys.button(uictx, item.logic, item.text, item.image)

    else if type == 'table' then
        o,w,h = sys.table(uictx, item.list, item.logic)
    end

    item.widget, item.w, item.h = o,w,h

    if not names then
        names = []
    end
    if item.name then
        names[item.name] = item
    end
    return names

end


testui = function()

    tester = [ 'select' : function(ctx)
                                sys.print('select ' + sys.args()[1])
                                sys.update(ctx.ui.testable, [3,1,4,1,5])
                            end ]

    tester.ui = sys.ui( tester,

                        ['vertical',

                            ['form', 'username', 'password'],

                            ['horizontal',
                                ['button', 'text':'submit'],
                                ['button', 'text':'cancel']
                            ],

                            ['table', 'name':'testable', 'list':[7,8,9], 'fill':true, 'logic':tester.select],

                            'w':240, 'h':320
                        ] )

    sys.print(tester.ui) # all the named ui items

    sys.loop()

end

testui()
