import '../ui'
import '../mesh'

port = 9999

####### net

client = [

    'contacts' : (sys.load('contacts') or []),
    'roster' : [],
    'unread' : [],
    'mesh' : Mesh,

    'handle_message' : function(self, socket, mc1)
        e = mc1.event
        if (e == 'greet') then
            creds = sys.form_get(self.ui)
            return ['event' : self.entrance] + creds
        else if e == 'signin' then
            self.handle_signin(socket, mc1)
        else if e == 'chat' then
            self.handle_chat(mc1.chat, mc1.from)
        else if e == 'contacts' then
            self.handle_contacts(mc1.contacts)
        else if e == 'online' then
            self.handle_online(mc1.from, mc1.online)
        else
            self.sync.handle_message(socket, mc1)
        end
    end,

    'connected' : function(self, socket)
        self.mesh.print('connected ' + socket)
        self.server = socket
    end,

    'handle_contacts' : function(self, contacts)
        self.mesh.print('handle_contacts ' + contacts)
        self.contacts = contacts
        self.update_roster()
    end,

    'handle_online' : function(self, from, state)
        self.contacts[from].online = state
        self.mesh.print('handle_online ' + self.contacts)
        self.update_roster()
    end,

    'available_contacts' : function(self)
        self.roster = [k for k,v in self.contacts where v.online]
        return self.roster
    end,

    'update_roster' : function(self)
        sys.ui_set(self.ui.roster, self.available_contacts())
    end,

    'handle_signin' : function(self, socket, mc3)
        if mc3.result then
            self.contacts = mc3.contacts
            self.main()
        else
            sys.ui_set(self.ui.error, mc3.error)
        end
    end
]


####### ui

client.select = function(self)

    self.transcript = ''
    row = sys.args()[1]
    peer = self.roster[row]
    send = function(self)(peer)
        text = sys.form_get(self.ui).sezme
        msgtext = ['from':self.mesh.id, 'to':peer, 'event':'chat', 'chat':text]
        self.update_transcript('you', text)
        self.mesh.send(self.server, msgtext)
    end

    self.ui = sys.ui(self,
                    ['horizontal',

                        ['table', 'name':'roster', 'list':self.available_contacts(), 'logic':self.select, 'hfill':true, 'width':0.25],
                        ['vertical',
                            ['input', 'name':'transcript', 'multiline':true, 'readonly':true, 'hfill':true],
                            ['input', 'name':'sezme'],
                            ['button', 'text':'send', 'logic':send],
                        ]
                    ])
    self.peer = peer

end

client.update_transcript = function(self, from, text)
    if self.transcript.length then
        self.transcript = self.transcript + '\n'
    end
    self.transcript = self.transcript + from +':'+ text
    sys.ui_set(self.ui.transcript, self.transcript)
end

client.handle_chat = function(self, chat, from)

    if from == self.peer then
        self.update_transcript(from, chat)
    else
        self.unread[from] = self.unread + [chat]
        roster = [r+ '(' + self.unread[r].length + ')' for r in self.contacts where r.online]
        sys.ui_set(self.ui.roster, roster)
    end

end

client.send = function(self, other)

    text = sys.form_get(self.ui).sezme
    msgtext = ['event':'text', 'text':text]
    self.mesh.send_to(peer, msgtext)

end

client.showContacts = function(self)

    self.ui = sys.ui(self, ['vertical',
                        ['table', 'name':'contacts', 'list':self.contacts.keys, 'logic':self.selectContact],
                        ['button', 'text':'back to settings', 'logic':self.settings],
                        self.w, self.h
                    ])
end

client.selectContact = function(self)

    row = sys.args()[1]
    self.peer = self.contacts.keys[row]

    sys.print('sp='+self.peer)

    self.ui = sys.ui(self, ['vertical',
                        ['label', 'text':self.peer],
                        ['form', 'name'],
                        ['button', 'text':'delete', 'logic':self.deleteContact],
                        self.w, self.h
                    ])

    sys.form_set(['name':self.peer])

end

client.deleteContact = function(self)

    self.contacts = self.contacts - self.peer
    mc4 = ['event' : 'contacts', 'contacts' : self.contacts]
    self.mesh.send_to('server', mc4)
    self.settings()

end

client.settings = function(client)

    client.ui = sys.ui(client, ['vertical',

                        ['form', 'server', 'display name', 'id', 'password'],

                        ['button', 'text':'contacts', 'logic':client.showContacts],

                        ['horizontal',
                            ['button', 'text':'save',   'logic':sys.save(sys.form_get(client.ui), 'settings')],
                            ['button', 'text':'cancel', 'logic':client.main],
                            ['button', 'text':'logout', 'logic':client.main],
                        ],

                        client.w, client.h
                    ])

    f = sys.load('settings')
    sys.form_set(f)
end

client.main = function(self)

    self.ui = sys.ui(self, ['vertical',

                                ['horizontal',
                                    ['button', 'text':'add',      'logic':self.add],
                                    ['button', 'text':'settings', 'logic':self.settings],
                                ],

                                ['table', 'name':'roster', 'list':self.available_contacts(), 'logic':self.select],

                                self.w, self.h
                            ])
end

client.add = function(self)

    self.ui = sys.ui(self,

                    ['vertical',

                        ['form', 'id'],

                        ['horizontal',
                            ['button', 'text':'add',       'logic':self.added],
                            ['button', 'text':'nevermind', 'logic':self.main],
                        ],

                        self.w, self.h
                    ])
end


client.added = function(self)
    friend = sys.form_get(self.ui).id
    self.contacts = self.contacts + [friend:[]]
    sys.print('fz ' + friend + ' -- ' + self.contacts)
    mc4 = ['event' : 'contacts', 'contacts' : self.contacts]
    self.mesh.send_to('server', mc4)
    self.main()
end

client.signin = function(self, entrance)
    self.entrance = entrance or 'signin'
    id = sys.form_get(self.ui).id
    self.mesh = self.mesh.init(id, self.port, [self])
    self.mesh.connect()
end

client.signup = function(self)
    self.signin('signup')
end

client.ui_login = function(self)
    self.ui = sys.ui(self, ['vertical',
                                 ['form', 'server', 'id', 'password'],
                                 ['horizontal',
                                     ['button', 'text':'signin', 'logic':self.signin],
                                     ['button', 'text':'signup', 'logic':self.signup],
                                 ],
                                 self.w, self.h
                            ])
end

#client.ui_login()
client.select()

sys.loop()

