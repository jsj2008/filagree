import '../mesh'    # shared mesh logic
import '../sync/sync'    # shared sync logic


host = '127.0.0.1'
id = 'server'
port = 9999


im = [

    'id' : id,
    'clients' : (sys.load('logins') or []),
    'friends' : (sys.load('friends') or []),

    'handle_disconnect' : function(self, socket, id)
        mc3 = ['event' : 'offline', 'from' : id]
        self.broadcast(mc3)
    end,

    'handle_message' : function(self, socket, ms1)

        if ms1.event == 'signup' then
            return self.handle_signup(ms1)
        else if ms1.event == 'signin' then
            return self.handle_signin(ms1)
        else if ms1.event == 'friends' then
            return self.handle_friends(ms1)
        end
    end,

    'handle_friends' : function(self, msf)
        self.friends[msf.from] = msf.friends
        sys.save(self.friends, 'friends')
        return self.online(msf.from)
    end,

    'online' : function(self, to)
        online = self.friends[to] # [p for p in self.friends[to] where self.peers[p]]
        return ['friends' : online]
    end,

    'handle_signup' : function(self, ms2)
        if (not self.clients[ms2.from]) then
            self.clients[ms2.from] = ms2.password
            sys.save(self.clients, 'logins')
            return ['event' : 'signup', 'result' : true]
        else
            return ['event' : 'signup', 'result' : false]
        end
    end,

    'handle_signin' : function(self, ms3)
        result = (self.clients[ms3.from] == ms3.password)
        if result then
            online = self.online(ms3.from)
        else
            online = []
        end
        return ['event' : 'signin', 'result' : result] + online
    end,

]

sys.print('logins='+im.clients +' '+ im.friends)

mesh = Mesh.init(id, 1999, [im])
im.mesh = mesh

mesh.listen()
sys.loop()
